version: '3.8'
services:
  ###### App
  front:
    build: .
    depends_on:
      - broker
      - redis
    restart: always
    ports:
      - 8080:8080
      - 5005:5005
    cpu_count: 2
    environment:
      APP: "front"
      SPRING_PROFILES_ACTIVE: "local-docker"
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Djdk.attach.allowAttachSelf=true"
    networks:
      - taxi_local
  back:
    build: .
    depends_on:
      - broker
      - postgres_db
    ports:
      - 8081:8080
      - 5006:5006
    cpu_count: 2
    environment:
      APP: "back"
      SPRING_PROFILES_ACTIVE: "local-docker"
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Djdk.attach.allowAttachSelf=true"
    networks:
      - taxi_local

  ###### Redis
  redis:
    image: redis:7.0.5-alpine
    restart: always
    hostname: redis
    ports:
      - '6379:6379'
    cpu_count: 2
    command: redis-server --save 20 1 --loglevel warning --requirepass ApOCINp0q8n3cN48cn23CaO74PCSMoiT
    #    volumes:
    #      - cache:/data
    networks:
      - taxi_local

  ###### Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    cpu_count: 2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - taxi_local
  broker:
    image: confluentinc/cp-server:7.2.2
    hostname: broker
    container_name: broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    cpu_count: 2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - taxi_local
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.2
    hostname: control-center
    container_name: control-center
    restart: always
    depends_on:
      - broker
    ports:
      - "9021:9021"
    cpu_count: 2
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - taxi_local

  ####### Postgres
  postgres_db:
    image: "postgres:14.0-alpine"
    #    volumes:
    #      - course_data:/var/lib/postgresql/data/ # persist data even if container shuts down
    cpu_count: 2
    environment:
      POSTGRES_USER: local_user
      POSTGRES_PASSWORD: local_password
      POSTGRES_DB: taxi
    ports:
      - 5432:5432
    networks:
      - taxi_local

networks:
  taxi_local:
    name: taxi_local
    driver: bridge
