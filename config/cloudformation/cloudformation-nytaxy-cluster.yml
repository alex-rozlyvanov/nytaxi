AWSTemplateFormatVersion: 2010-09-09
Description: Starter template for ECS

Parameters:
  OpenIdProviderARN:
    Type: String
    Description: The ARN of the IAM OIDC provider.

Resources:

  RedisPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: false
        IncludeSpace: false
        ExcludeNumbers: true
        ExcludeUppercase: true
      Name: nytaxi/redis/password

  DBAuth:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: true
        IncludeSpace: false
        ExcludeNumbers: true
        ExcludeUppercase: true
        SecretStringTemplate: '{"user": "rw_user"}'
        GenerateStringKey: 'password'
      Name: nytaxi/db/auth

  ClientAuth:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: false
        IncludeSpace: false
        ExcludeNumbers: true
        ExcludeUppercase: true
        SecretStringTemplate: '{"id": "default-client"}'
        GenerateStringKey: 'password'
      Name: nytaxi/client/auth

  JWTAccess:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: false
        IncludeSpace: false
        ExcludeNumbers: true
        ExcludeUppercase: true
      Name: nytaxi/jwt/access

  JWTRefresh:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 16
        ExcludePunctuation: false
        IncludeSpace: false
        ExcludeNumbers: true
        ExcludeUppercase: true
      Name: nytaxi/jwt/refresh

  DefaultPodRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: secrets-store-csi-driver-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - !Ref OpenIdProviderARN
            Action:
              - sts:AssumeRoleWithWebIdentity
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
      Policies:
        - PolicyName: Policy-to-read-secrets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:nytaxi/**"
        - PolicyName: Policy-to-manage-elastic-load-balancer
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs,
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeInstances
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeTargetHealth
                  - elasticloadbalancing:ModifyTargetGroup
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DeregisterTargets
                Resource: "*"
        - PolicyName: Policy-to-get-object-from-s3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !GetAtt FileBucket.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub "${FileBucket.Arn}/*"

  FileBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "orozlyvanov-nytaxi-file-bucket"
