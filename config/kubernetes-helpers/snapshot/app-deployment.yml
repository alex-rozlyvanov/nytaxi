
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
  labels:
    app: front
spec:
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
        - name: front
          image: nytaxi:0.0.3
          ports:
            - containerPort: 8080
          env:
            - name: APP
              value: "front"
            - name: SPRING_PROFILES_ACTIVE
              value: "local-kube"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-deployment
  labels:
    app: back
spec:
  selector:
    matchLabels:
      app: back
  template:
    metadata:
      labels:
        app: back
    spec:
      containers:
        - name: back
          image: nytaxi:0.0.3
          ports:
            - containerPort: 8080
          env:
            - name: APP
              value: "back"
            - name: SPRING_PROFILES_ACTIVE
              value: "local-kube"
---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: client-deployment
#  labels:
#    app: client
#spec:
#  template:
#    metadata:
#      labels:
#        app: client
#    spec:
#      containers:
#        - name: client
#          image: nytaxi:0.0.3
#          env:
#            - name: APP
#              value: "client"
#            - name: SPRING_PROFILES_ACTIVE
#              value: "local-kube"
#      restartPolicy: Never
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.0.5-alpine
          command:
            - redis-server
            - "/redis-master/redis.conf"
          env:
            - name: MASTER
              value: "true"
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
            - mountPath: /redis-master
              name: config
      volumes:
        - name: data
          emptyDir: { }
        - name: config
          configMap:
            name: redis-config
            items:
              - key: redis-config
                path: redis.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  labels:
    app: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.2.2
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-deployment
  labels:
    app: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      hostname: broker
      containers:
        - env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://broker:9092
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
          image: confluentinc/cp-server:7.2.2
          name: broker
          ports:
            - containerPort: 9092
